# Define the name of the GitHub Action workflow
name: azuresa_provision_001
# This workflow is manually triggered using the GitHub Actions UI
on:
  push:
    branches:
      - master
  workflow_dispatch:
    # Define inputs that are required for the manual trigger
    inputs:
      sa_name:
        description: 'Name of the Azure storage account'  # What's this input for?
        required: true  # Is it optional or required?
      sa_location:
        description: 'Azure location for the storage account'
        required: true
      sa_account_tier:
        description: 'storage account tier '
        required: true
      sa_account_replication_type:
        description: 'storage account replication type  '
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
# Jobs to be executed in this workflow
jobs:
  # Job for applying the azure storage account
  apply_azuresa:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest
    name: 'azuresa_provision_001'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    
    # Execute this step only if the action input is "apply"
    if: ${{ github.event.inputs.action == 'apply' }}
    # Define the steps for this job
    steps:
    
    # checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

# adding aws keys. Please store the value of these key in GitHub variables
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

# adding Azure creds. Please store the value of these keys in GitHub variables
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Initialize Terraform 
    - name: Terraform Init
      run: terraform init
      working-directory: .  # Where should this command be run?
      
    # Format Terraform code
    - name: Terraform Format
      run: terraform fmt
      working-directory: .
      
    # Validate the Terraform code 
    - name: Terraform Validate
      run: terraform validate
      working-directory: .
      
    # Apply the Terraform plan
    - name: Terraform vars
    - name: terraform apply
      run: terraform apply -var sa_name=${{ github.event.inputs.sa_name }} -var sa_location=${{ github.event.inputs.sa_location }} -var sa_account_tier=${{ github.event.inputs.sa_account_tier }} -var sa_account_replication_type=${{ github.event.inputs.sa_account_replication_type }} -auto-approve
      working-directory: .

  # Destroying the azure storage account instance
  destroy_instance:
    runs-on: ubuntu-latest
    
    # Execute this job only if the action input is "destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
# adding Azure creds. Please store the value of these keys in GitHub variables
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Terraform Init
      run: terraform init
      working-directory: .
      
    - name: Terraform FMT
      run: terraform fmt
      working-directory: .
      
      
    # Destroy all resources 
    - name: Terraform Destroy
    - name: terraform apply
      run: terraform destroy -var sa_name=${{ github.event.inputs.sa_name }} -var sa_location=${{ github.event.inputs.sa_location }} -var sa_account_tier=${{ github.event.inputs.sa_account_tier }} -var sa_account_replication_type=${{ github.event.inputs.sa_account_replication_type }} -auto-approve
      working-directory: .
